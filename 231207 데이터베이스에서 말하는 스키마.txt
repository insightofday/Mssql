Q.테이블명 앞에 dbo.이 붙는 이유??
ㄴSQL Server에서 테이블명 앞에 'dbo.'이 붙는 이유는 SQL Server의 기본 스키마(Default Schema)가 'dbo'로 설정되어 있기 때문입니다. 
'dbo'는 'Database Owner'의 약자로, SQL Server에서 기본적으로 생성되는 스키마 중 하나입니다.
SQL Server에서 객체를 만들 때(예: 테이블, 뷰, 저장 프로시저 등), 스키마 이름을 지정하지 않으면 기본적으로 'dbo' 스키마에 해당 객체가 생성됩니다. 
그래서 'dbo.'를 명시하지 않고 테이블명만 사용하면 SQL Server는 'dbo' 스키마에서 해당 테이블을 찾아 사용합니다.
만약 다른 스키마에 테이블이 있고, 'dbo' 스키마가 아닌 다른 스키마의 테이블을 참조하려면 해당 테이블명 앞에 스키마 이름을 명시해야 합니다. 
예를 들어, 'my_schema' 스키마에 'my_table'이라는 테이블이 있다면, 해당 테이블을 사용하려면 'my_schema.my_table'과 같이 명시해야 합니다.
일반적으로 명시적으로 스키마 이름을 사용하는 것이 코드의 가독성과 객체의 소유권을 명확히 하는 데 도움이 됩니다.


Q.스키마?
ㄴ스키마(Schema)는 데이터베이스 내에서 데이터 구조와 관련된 개념을 정의하는 데 사용되는 개체입니다. 
데이터베이스 스키마는 데이터베이스에 저장되는 데이터의 구조, 테이블, 관계, 필드 및 데이터베이스 개체에 대한 정보를 정의합니다.
일반적으로 스키마는 데이터베이스 내에 있는 테이블, 뷰, 인덱스, 저장 프로시저, 함수 등과 같은 데이터베이스 객체들의 집합이라고 생각할 수 있습니다. 
스키마는 데이터베이스 관리 시스템(DBMS)에서 데이터를 구조화하고 저장하는 방법을 정의하며, 데이터의 논리적인 구조를 제공합니다.

스키마는 다음과 같은 목적으로 사용될 수 있습니다:
1. **데이터 구조 정의:** 테이블, 컬럼, 제약 조건 등 데이터 구조를 정의하여 데이터를 저장하는 방법을 결정합니다.
2. **보안 및 권한 관리:** 특정 스키마에 대한 접근 권한을 제어하고, 보안 정책을 구현합니다.
3. **이름 충돌 회피:** 동일한 이름을 가진 객체들을 다른 스키마에 속하도록 함으로써 이름 충돌을 방지합니다.
4. **구조화된 데이터 관리:** 스키마는 데이터베이스 내의 데이터를 조직화하여 효과적인 관리와 쿼리 수행을 가능하게 합니다.
   
예를 들어, 한 데이터베이스에서 '사용자'와 '주문' 정보를 저장하는 경우, '사용자'와 '주문' 테이블은 각각의 스키마로 구성될 수 있습니다. 
이러한 스키마를 사용하면 데이터베이스 객체들을 분리하여 유지보수 및 관리를 용이하게 할 수 있습니다.

스키마는 데이터베이스 객체들의 논리적인 그룹화를 제공하며, 
테이블명이 서로 다르더라도 같은 스키마 내에 존재하는 경우 데이터베이스 구조를 명확히하고 관리하기 쉽게 도와줍니다.


